INFO  01:21:23,236 - Compiling source file: E:\7_semestar\PP1\Projekat\workspace\MJCompiler\test\semantikaTest.mj
INFO  01:21:23,289 - #2 program
INFO  01:21:23,289 - #17 SemantikaMJ
INFO  01:21:23,289 - #17 bool
INFO  01:21:23,290 - #17 x
INFO  01:21:23,291 - #5 ;
INFO  01:21:23,292 - #47 const
INFO  01:21:23,293 - #17 int
INFO  01:21:23,293 - #17 ci
INFO  01:21:23,293 - #15 =
INFO  01:21:23,293 - #20 5
INFO  01:21:23,293 - #9 ,
INFO  01:21:23,293 - #17 ci2
INFO  01:21:23,293 - #15 =
INFO  01:21:23,294 - #20 6
INFO  01:21:23,294 - #9 ,
INFO  01:21:23,294 - #17 ci3
INFO  01:21:23,294 - #15 =
INFO  01:21:23,294 - #20 6
INFO  01:21:23,294 - #5 ;
INFO  01:21:23,294 - #17 int
INFO  01:21:23,295 - #17 y
INFO  01:21:23,297 - #5 ;
INFO  01:21:23,297 - #17 char
INFO  01:21:23,297 - #17 z
INFO  01:21:23,297 - #5 ;
INFO  01:21:23,297 - #17 int
INFO  01:21:23,297 - #17 a
INFO  01:21:23,297 - #5 ;
INFO  01:21:23,297 - #17 null
INFO  01:21:23,297 - #17 i
INFO  01:21:23,297 - #5 ;
INFO  01:21:23,297 - #17 int
INFO  01:21:23,297 - #17 b
INFO  01:21:23,298 - #10 [
INFO  01:21:23,298 - #11 ]
INFO  01:21:23,298 - #9 ,
INFO  01:21:23,299 - #17 c
INFO  01:21:23,299 - #10 [
INFO  01:21:23,299 - #11 ]
INFO  01:21:23,299 - #9 ,
INFO  01:21:23,299 - #17 d
INFO  01:21:23,299 - #10 [
INFO  01:21:23,299 - #11 ]
INFO  01:21:23,299 - #5 ;
INFO  01:21:23,299 - #17 char
INFO  01:21:23,300 - #17 charArray
INFO  01:21:23,300 - #10 [
INFO  01:21:23,300 - #11 ]
INFO  01:21:23,300 - #5 ;
INFO  01:21:23,300 - #17 bool
INFO  01:21:23,300 - #17 boolArray
INFO  01:21:23,300 - #10 [
INFO  01:21:23,301 - #11 ]
INFO  01:21:23,301 - #5 ;
INFO  01:21:23,301 - #3 {
INFO  01:21:23,301 - #16 void
INFO  01:21:23,302 - #17 k
INFO  01:21:23,302 - #7 (
INFO  01:21:23,302 - #17 int
INFO  01:21:23,302 - #17 b
INFO  01:21:23,302 - #9 ,
INFO  01:21:23,302 - #17 bool
INFO  01:21:23,302 - #17 c
INFO  01:21:23,303 - #9 ,
INFO  01:21:23,303 - #17 bool
INFO  01:21:23,303 - #17 bulovi
INFO  01:21:23,303 - #10 [
INFO  01:21:23,303 - #11 ]
INFO  01:21:23,303 - #8 )
INFO  01:21:23,303 - #17 int
INFO  01:21:23,304 - #17 i
INFO  01:21:23,304 - #5 ;
INFO  01:21:23,304 - #17 int
INFO  01:21:23,304 - #17 a
INFO  01:21:23,305 - #5 ;
INFO  01:21:23,305 - #3 {
INFO  01:21:23,305 - #12 print
INFO  01:21:23,305 - #7 (
INFO  01:21:23,306 - #19 A
INFO  01:21:23,306 - #8 )
INFO  01:21:23,306 - #5 ;
INFO  01:21:23,306 - #14 return
INFO  01:21:23,306 - #5 ;
INFO  01:21:23,307 - #4 }
INFO  01:21:23,307 - #16 void
INFO  01:21:23,308 - #17 eh
INFO  01:21:23,308 - #7 (
INFO  01:21:23,308 - #8 )
INFO  01:21:23,309 - #17 int
INFO  01:21:23,309 - #17 i
INFO  01:21:23,309 - #5 ;
INFO  01:21:23,309 - #17 int
INFO  01:21:23,309 - #17 oo
INFO  01:21:23,310 - #5 ;
INFO  01:21:23,310 - #3 {
INFO  01:21:23,310 - #4 }
INFO  01:21:23,311 - #16 void
INFO  01:21:23,311 - #17 main
INFO  01:21:23,311 - #7 (
INFO  01:21:23,311 - #8 )
INFO  01:21:23,313 - #3 {
INFO  01:21:23,313 - #17 y
INFO  01:21:23,314 - #15 =
INFO  01:21:23,314 - #17 b
INFO  01:21:23,315 - #10 [
INFO  01:21:23,315 - #17 a
INFO  01:21:23,315 - #11 ]
INFO  01:21:23,315 - #5 ;
INFO  01:21:23,315 - #4 }
INFO  01:21:23,316 - #4 }
INFO  01:21:23,318 - Program(
  ProgName(
   SemantikaMJ
  ) [ProgName]
  DeclarationList(
    DeclarationList(
      DeclarationList(
        DeclarationList(
          DeclarationList(
            DeclarationList(
              DeclarationList(
                DeclarationList(
                  DeclarationList(
                    NoDeclarationList(
                    ) [NoDeclarationList]
                    VarTypeDeclaration(
                      VarDecl(
                        Type(
                         bool
                        ) [Type]
                        VariableName(
                         x
                        ) [VariableName]
                        BoxNo(
                        ) [BoxNo]
                        NoVarDeclAdd(
                        ) [NoVarDeclAdd]
                      ) [VarDecl]
                    ) [VarTypeDeclaration]
                  ) [DeclarationList]
                  ConstTypeDeclaration(
                    ConstDecl(
                      Type(
                       int
                      ) [Type]
                     ci
                      NumberConst(
                       5
                      ) [NumberConst]
                      ConstDeclAdd(
                        ConstDeclAdd(
                          NoConstDeclAddition(
                          ) [NoConstDeclAddition]
                         ci2
                          NumberConst(
                           6
                          ) [NumberConst]
                        ) [ConstDeclAdd]
                       ci3
                        NumberConst(
                         6
                        ) [NumberConst]
                      ) [ConstDeclAdd]
                    ) [ConstDecl]
                  ) [ConstTypeDeclaration]
                ) [DeclarationList]
                VarTypeDeclaration(
                  VarDecl(
                    Type(
                     int
                    ) [Type]
                    VariableName(
                     y
                    ) [VariableName]
                    BoxNo(
                    ) [BoxNo]
                    NoVarDeclAdd(
                    ) [NoVarDeclAdd]
                  ) [VarDecl]
                ) [VarTypeDeclaration]
              ) [DeclarationList]
              VarTypeDeclaration(
                VarDecl(
                  Type(
                   char
                  ) [Type]
                  VariableName(
                   z
                  ) [VariableName]
                  BoxNo(
                  ) [BoxNo]
                  NoVarDeclAdd(
                  ) [NoVarDeclAdd]
                ) [VarDecl]
              ) [VarTypeDeclaration]
            ) [DeclarationList]
            VarTypeDeclaration(
              VarDecl(
                Type(
                 int
                ) [Type]
                VariableName(
                 a
                ) [VariableName]
                BoxNo(
                ) [BoxNo]
                NoVarDeclAdd(
                ) [NoVarDeclAdd]
              ) [VarDecl]
            ) [VarTypeDeclaration]
          ) [DeclarationList]
          VarTypeDeclaration(
            VarDecl(
              Type(
               null
              ) [Type]
              VariableName(
               i
              ) [VariableName]
              BoxNo(
              ) [BoxNo]
              NoVarDeclAdd(
              ) [NoVarDeclAdd]
            ) [VarDecl]
          ) [VarTypeDeclaration]
        ) [DeclarationList]
        VarTypeDeclaration(
          VarDecl(
            Type(
             int
            ) [Type]
            VariableName(
             b
            ) [VariableName]
            BoxYes(
            ) [BoxYes]
            VarDeclAdd(
              VarDeclAdd(
                NoVarDeclAdd(
                ) [NoVarDeclAdd]
                VariableName(
                 c
                ) [VariableName]
                BoxYes(
                ) [BoxYes]
              ) [VarDeclAdd]
              VariableName(
               d
              ) [VariableName]
              BoxYes(
              ) [BoxYes]
            ) [VarDeclAdd]
          ) [VarDecl]
        ) [VarTypeDeclaration]
      ) [DeclarationList]
      VarTypeDeclaration(
        VarDecl(
          Type(
           char
          ) [Type]
          VariableName(
           charArray
          ) [VariableName]
          BoxYes(
          ) [BoxYes]
          NoVarDeclAdd(
          ) [NoVarDeclAdd]
        ) [VarDecl]
      ) [VarTypeDeclaration]
    ) [DeclarationList]
    VarTypeDeclaration(
      VarDecl(
        Type(
         bool
        ) [Type]
        VariableName(
         boolArray
        ) [VariableName]
        BoxYes(
        ) [BoxYes]
        NoVarDeclAdd(
        ) [NoVarDeclAdd]
      ) [VarDecl]
    ) [VarTypeDeclaration]
  ) [DeclarationList]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDecl(
        ) [NoMethodDecl]
        MethodDeclaration(
          MetVoidName(
           k
          ) [MetVoidName]
          FormParams(
            FormalParamDecls(
              FormalParamDecls(
                SingleFormalParamDecl(
                  FormalParamDeclaration(
                    Type(
                     int
                    ) [Type]
                   b
                    BoxNo(
                    ) [BoxNo]
                  ) [FormalParamDeclaration]
                ) [SingleFormalParamDecl]
                FormalParamDeclaration(
                  Type(
                   bool
                  ) [Type]
                 c
                  BoxNo(
                  ) [BoxNo]
                ) [FormalParamDeclaration]
              ) [FormalParamDecls]
              FormalParamDeclaration(
                Type(
                 bool
                ) [Type]
               bulovi
                BoxYes(
                ) [BoxYes]
              ) [FormalParamDeclaration]
            ) [FormalParamDecls]
          ) [FormParams]
          VarDeclarations(
            VarDeclarations(
              NoVarDecl(
              ) [NoVarDecl]
              VarDecl(
                Type(
                 int
                ) [Type]
                VariableName(
                 i
                ) [VariableName]
                BoxNo(
                ) [BoxNo]
                NoVarDeclAdd(
                ) [NoVarDeclAdd]
              ) [VarDecl]
            ) [VarDeclarations]
            VarDecl(
              Type(
               int
              ) [Type]
              VariableName(
               a
              ) [VariableName]
              BoxNo(
              ) [BoxNo]
              NoVarDeclAdd(
              ) [NoVarDeclAdd]
            ) [VarDecl]
          ) [VarDeclarations]
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              PrintStmt(
                Expresion(
                  TermExpr(
                    FactorTerm(
                      Const(
                        CharConst(
                         A
                        ) [CharConst]
                      ) [Const]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [Expresion]
              ) [PrintStmt]
            ) [Statements]
            ReturnNoExpr(
            ) [ReturnNoExpr]
          ) [Statements]
        ) [MethodDeclaration]
      ) [MethodDeclarations]
      MethodDeclaration(
        MetVoidName(
         eh
        ) [MetVoidName]
        NoFormParam(
        ) [NoFormParam]
        VarDeclarations(
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               int
              ) [Type]
              VariableName(
               i
              ) [VariableName]
              BoxNo(
              ) [BoxNo]
              NoVarDeclAdd(
              ) [NoVarDeclAdd]
            ) [VarDecl]
          ) [VarDeclarations]
          VarDecl(
            Type(
             int
            ) [Type]
            VariableName(
             oo
            ) [VariableName]
            BoxNo(
            ) [BoxNo]
            NoVarDeclAdd(
            ) [NoVarDeclAdd]
          ) [VarDecl]
        ) [VarDeclarations]
        NoStmt(
        ) [NoStmt]
      ) [MethodDeclaration]
    ) [MethodDeclarations]
    MethodDeclaration(
      MetVoidName(
       main
      ) [MetVoidName]
      NoFormParam(
      ) [NoFormParam]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        Assignment(
          DesignatorExpression(
            DesignatorAssignExpression(
              DesignatorIdent(
               y
              ) [DesignatorIdent]
              Assign(
              ) [Assign]
              Expresion(
                TermExpr(
                  FactorTerm(
                    Var(
                      DesignatorExprList(
                        DesignatorIdent(
                         b
                        ) [DesignatorIdent]
                        Expresion(
                          TermExpr(
                            FactorTerm(
                              Var(
                                DesignatorIdent(
                                 a
                                ) [DesignatorIdent]
                              ) [Var]
                            ) [FactorTerm]
                          ) [TermExpr]
                        ) [Expresion]
                      ) [DesignatorExprList]
                    ) [Var]
                  ) [FactorTerm]
                ) [TermExpr]
              ) [Expresion]
            ) [DesignatorAssignExpression]
          ) [DesignatorExpression]
        ) [Assignment]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MethodDeclarations]
) [Program]
INFO  01:21:23,319 - ===================================
INFO  01:21:23,328 - Deklarisana promenljiva x na liniji 3
INFO  01:21:23,328 - Deklarisana int konstantna ci2 na liniji 4
INFO  01:21:23,328 - Deklarisana int konstantna ci3 na liniji 4
INFO  01:21:23,328 - Deklarisana int konstantna ci na liniji 4
INFO  01:21:23,328 - Deklarisana promenljiva y na liniji 5
INFO  01:21:23,328 - Deklarisana promenljiva z na liniji 6
INFO  01:21:23,328 - Deklarisana promenljiva a na liniji 7
ERROR 01:21:23,329 - Greska: Ime null ne predstavlja tip! na liniji 8
ERROR 01:21:23,329 - Greska pri deklarisanju promenljive  na liniji 8
INFO  01:21:23,329 - Deklarisana promenljiva c na liniji 9
INFO  01:21:23,329 - Deklarisana promenljiva d na liniji 9
INFO  01:21:23,329 - Deklarisana promenljiva b na liniji 9
INFO  01:21:23,329 - Deklarisana promenljiva charArray na liniji 10
INFO  01:21:23,329 - Deklarisana promenljiva boolArray na liniji 11
INFO  01:21:23,329 - Obradjuje se funkcija k na liniji 13
INFO  01:21:23,329 - Definisan fomralni parametar metode b na liniji 13
INFO  01:21:23,329 - Definisan fomralni parametar metode c na liniji 13
INFO  01:21:23,329 - Definisan fomralni parametar metode bulovi na liniji 13
INFO  01:21:23,329 - Deklarisana promenljiva i na liniji 14
INFO  01:21:23,330 - Deklarisana promenljiva a na liniji 15
INFO  01:21:23,330 - Obradjuje se funkcija eh na liniji 21
INFO  01:21:23,330 - Deklarisana promenljiva i na liniji 22
INFO  01:21:23,330 - Deklarisana promenljiva oo na liniji 23
INFO  01:21:23,330 - Obradjuje se funkcija main na liniji 26
INFO  01:21:23,330 - Pristup elementu niza na liniji 27
INFO  01:21:23,330 -  Print count calls = 1
INFO  01:21:23,330 -  Deklarisanih promenljivih ima = 13

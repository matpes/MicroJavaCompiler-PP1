// generated with ast extension for cup
// version 0.8
// 11/0/2021 13:21:30


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(Statement2 Statement2);
    public void visit(ExpressionStatement ExpressionStatement);
    public void visit(StatementList StatementList);
    public void visit(OtherDesignatorStatement OtherDesignatorStatement);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(CaseList CaseList);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(IfCondition IfCondition);
    public void visit(ConstDeclAddition ConstDeclAddition);
    public void visit(ActualParamList ActualParamList);
    public void visit(VarDecList VarDecList);
    public void visit(ConstVar ConstVar);
    public void visit(OptBox OptBox);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(Expr1 Expr1);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(VariableIdent VariableIdent);
    public void visit(ClassDeclList ClassDeclList);
    public void visit(TypeDecl TypeDecl);
    public void visit(PrintStatement PrintStatement);
    public void visit(Statement Statement);
    public void visit(VarDeclAddition VarDeclAddition);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(IfStatement IfStatement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptExpr OptExpr);
    public void visit(FormPars FormPars);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Subop Subop);
    public void visit(Addop Addop);
    public void visit(LowerOrEqual LowerOrEqual);
    public void visit(Lower Lower);
    public void visit(GreaterOrEqual GreaterOrEqual);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Assign Assign);
    public void visit(DesignatorExprList DesignatorExprList);
    public void visit(DesignatorIdentList DesignatorIdentList);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(NoOptExpr NoOptExpr);
    public void visit(YesOptExpr YesOptExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(NewVar NewVar);
    public void visit(FuncCall FuncCall);
    public void visit(Var Var);
    public void visit(Const Const);
    public void visit(MullTerm MullTerm);
    public void visit(FactorTerm FactorTerm);
    public void visit(Colon Colon);
    public void visit(Question Question);
    public void visit(Expresion Expresion);
    public void visit(ConditionExpr ConditionExpr);
    public void visit(NegTermExpr NegTermExpr);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(And And);
    public void visit(ConditionAnd ConditionAnd);
    public void visit(ConditionFact ConditionFact);
    public void visit(Or Or);
    public void visit(ConditionOr ConditionOr);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(DesignatorError DesignatorError);
    public void visit(DesignatorAssignExpression DesignatorAssignExpression);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorFuncCall DesignatorFuncCall);
    public void visit(DesignatorOther DesignatorOther);
    public void visit(DesignatorExpression DesignatorExpression);
    public void visit(EmptyCase EmptyCase);
    public void visit(Case Case);
    public void visit(IfErrorCondition IfErrorCondition);
    public void visit(IfGoodConditions IfGoodConditions);
    public void visit(IfWithElseStatementExpression IfWithElseStatementExpression);
    public void visit(IfWithoutElseStatementExpression IfWithoutElseStatementExpression);
    public void visit(DoWhileStart DoWhileStart);
    public void visit(DoWhile DoWhile);
    public void visit(IfStmt IfStmt);
    public void visit(Assignment Assignment);
    public void visit(Switch Switch);
    public void visit(ReadStmt ReadStmt);
    public void visit(PrintStmtAndNumber PrintStmtAndNumber);
    public void visit(PrintStmt PrintStmt);
    public void visit(BracedStatement BracedStatement);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(Continue Continue);
    public void visit(Break Break);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(ErrorFPClass ErrorFPClass);
    public void visit(FormalParamDeclaration FormalParamDeclaration);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(BoxNo BoxNo);
    public void visit(BoxYes BoxYes);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumberConst NumberConst);
    public void visit(NoConstDeclAddition NoConstDeclAddition);
    public void visit(ConstDeclAdd ConstDeclAdd);
    public void visit(ConstDecl ConstDecl);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclExtendsMethods ClassDeclExtendsMethods);
    public void visit(ClassDeclExtends ClassDeclExtends);
    public void visit(ClassDeclMethods ClassDeclMethods);
    public void visit(ClassDeclSimple ClassDeclSimple);
    public void visit(MetVoidName MetVoidName);
    public void visit(MetTypeName MetTypeName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(NoVarDeclAdd NoVarDeclAdd);
    public void visit(VarDeclAdd VarDeclAdd);
    public void visit(VaraibleNameError VaraibleNameError);
    public void visit(VariableName VariableName);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ClassTypeDeclaration ClassTypeDeclaration);
    public void visit(ConstTypeDeclaration ConstTypeDeclaration);
    public void visit(VarTypeDeclaration VarTypeDeclaration);
    public void visit(NoDeclarationList NoDeclarationList);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
